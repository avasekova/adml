package gui;

import java.awt.event.WindowEvent;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import models.TrainAndTestReport;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEverything = new javax.swing.JTabbedPane();
        panelChart = new javax.swing.JPanel();
        comboBoxColnames = new javax.swing.JComboBox();
        buttonPlotColname = new javax.swing.JButton();
        panelPlot = new javax.swing.JPanel();
        panelData = new javax.swing.JPanel();
        scrollPaneData = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        panelSummaryOutside = new javax.swing.JPanel();
        comboBoxColnamesSummary = new javax.swing.JComboBox();
        buttonSummaryColname = new javax.swing.JButton();
        panelSummary = new javax.swing.JPanel();
        jLabelTrainingInfo = new javax.swing.JLabel();
        panelAnalysisSettings = new javax.swing.JPanel();
        paneSettingsMethods = new javax.swing.JTabbedPane();
        paneSettingsMethodsMLP = new javax.swing.JPanel();
        jLabelPercTrain = new javax.swing.JLabel();
        sliderPercentTrain = new javax.swing.JSlider();
        textFieldPercentTrain = new javax.swing.JTextField();
        jLabelPercentSign = new javax.swing.JLabel();
        jLabelRPkg = new javax.swing.JLabel();
        comboBoxRPackage = new javax.swing.JComboBox();
        textFieldNumNonSeasonalLags = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textFieldNumSeasonalLags = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textFieldNumNodesInHiddenSingleLayer = new javax.swing.JTextField();
        panelSettingsMLPPackage = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        paneSettingsMethodsARIMA = new javax.swing.JPanel();
        jLabelARIMA = new javax.swing.JLabel();
        menuBarMain = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileLoad = new javax.swing.JMenuItem();
        menuFileExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboBoxColnames.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        buttonPlotColname.setText("Plot");
        buttonPlotColname.setEnabled(false);
        buttonPlotColname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlotColnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPlotLayout = new javax.swing.GroupLayout(panelPlot);
        panelPlot.setLayout(panelPlotLayout);
        panelPlotLayout.setHorizontalGroup(
            panelPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 766, Short.MAX_VALUE)
        );
        panelPlotLayout.setVerticalGroup(
            panelPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChartLayout.createSequentialGroup()
                        .addComponent(comboBoxColnames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonPlotColname))
                    .addComponent(panelPlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxColnames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonPlotColname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPlot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelEverything.addTab("Chart", panelChart);

        jTableData.setModel(dataTableModel);
        scrollPaneData.setViewportView(jTableData);

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneData, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneData, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );

        panelEverything.addTab("Data", panelData);

        comboBoxColnamesSummary.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        buttonSummaryColname.setText("Train and Test");
        buttonSummaryColname.setEnabled(false);
        buttonSummaryColname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSummaryColnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSummaryLayout = new javax.swing.GroupLayout(panelSummary);
        panelSummary.setLayout(panelSummaryLayout);
        panelSummaryLayout.setHorizontalGroup(
            panelSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelSummaryLayout.setVerticalGroup(
            panelSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelSummaryOutsideLayout = new javax.swing.GroupLayout(panelSummaryOutside);
        panelSummaryOutside.setLayout(panelSummaryOutsideLayout);
        panelSummaryOutsideLayout.setHorizontalGroup(
            panelSummaryOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSummaryOutsideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSummaryOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelSummaryOutsideLayout.createSequentialGroup()
                        .addComponent(comboBoxColnamesSummary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSummaryColname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTrainingInfo)
                        .addGap(0, 691, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelSummaryOutsideLayout.setVerticalGroup(
            panelSummaryOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSummaryOutsideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSummaryOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxColnamesSummary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSummaryColname)
                    .addComponent(jLabelTrainingInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelEverything.addTab("Summary", panelSummaryOutside);

        paneSettingsMethods.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabelPercTrain.setText("Portion of data to use for training:");

        sliderPercentTrain.setPaintTicks(true);
        sliderPercentTrain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderPercentTrainStateChanged(evt);
            }
        });

        textFieldPercentTrain.setText("" + sliderPercentTrain.getValue());
        textFieldPercentTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPercentTrainActionPerformed(evt);
            }
        });

        jLabelPercentSign.setText("%");

        jLabelRPkg.setText("R package:");

        comboBoxRPackage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "nnetar (forecast)", "neuralnet" }));

        textFieldNumNonSeasonalLags.setToolTipText("The default is the optimal number of lags (according to the AIC) for a linear AR(p) model.");

        jLabel1.setText("Number of non-seasonal lags to be used as inputs:");

        jLabel2.setText("Number of seasonal lags to be used as inputs:");

        jLabel3.setText("Number of nodes in the (single) hidden layer:");

        textFieldNumNodesInHiddenSingleLayer.setText("1");

        jLabel4.setText("this is a different Panel");

        javax.swing.GroupLayout panelSettingsMLPPackageLayout = new javax.swing.GroupLayout(panelSettingsMLPPackage);
        panelSettingsMLPPackage.setLayout(panelSettingsMLPPackageLayout);
        panelSettingsMLPPackageLayout.setHorizontalGroup(
            panelSettingsMLPPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettingsMLPPackageLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel4)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        panelSettingsMLPPackageLayout.setVerticalGroup(
            panelSettingsMLPPackageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSettingsMLPPackageLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 259, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout paneSettingsMethodsMLPLayout = new javax.swing.GroupLayout(paneSettingsMethodsMLP);
        paneSettingsMethodsMLP.setLayout(paneSettingsMethodsMLPLayout);
        paneSettingsMethodsMLPLayout.setHorizontalGroup(
            paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPercTrain)
                    .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                        .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelRPkg, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxRPackage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paneSettingsMethodsMLPLayout.createSequentialGroup()
                                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(10, 10, 10)
                                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldNumNonSeasonalLags, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(textFieldNumSeasonalLags)))
                            .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(sliderPercentTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldPercentTrain)
                                    .addComponent(textFieldNumNodesInHiddenSingleLayer, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPercentSign)))
                .addGap(49, 49, 49)
                .addComponent(panelSettingsMLPPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneSettingsMethodsMLPLayout.setVerticalGroup(
            paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelRPkg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxRPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jLabelPercTrain)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderPercentTrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textFieldPercentTrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelPercentSign)))
                        .addGap(49, 49, 49)
                        .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textFieldNumNodesInHiddenSingleLayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldNumNonSeasonalLags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(paneSettingsMethodsMLPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textFieldNumSeasonalLags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(paneSettingsMethodsMLPLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(panelSettingsMLPPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        paneSettingsMethods.addTab("MLP", paneSettingsMethodsMLP);

        jLabelARIMA.setText("Blabla:");

        javax.swing.GroupLayout paneSettingsMethodsARIMALayout = new javax.swing.GroupLayout(paneSettingsMethodsARIMA);
        paneSettingsMethodsARIMA.setLayout(paneSettingsMethodsARIMALayout);
        paneSettingsMethodsARIMALayout.setHorizontalGroup(
            paneSettingsMethodsARIMALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSettingsMethodsARIMALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelARIMA)
                .addContainerGap(758, Short.MAX_VALUE))
        );
        paneSettingsMethodsARIMALayout.setVerticalGroup(
            paneSettingsMethodsARIMALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSettingsMethodsARIMALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelARIMA)
                .addContainerGap(462, Short.MAX_VALUE))
        );

        paneSettingsMethods.addTab("ARIMA", paneSettingsMethodsARIMA);

        javax.swing.GroupLayout panelAnalysisSettingsLayout = new javax.swing.GroupLayout(panelAnalysisSettings);
        panelAnalysisSettings.setLayout(panelAnalysisSettingsLayout);
        panelAnalysisSettingsLayout.setHorizontalGroup(
            panelAnalysisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneSettingsMethods, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
        );
        panelAnalysisSettingsLayout.setVerticalGroup(
            panelAnalysisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneSettingsMethods)
        );

        panelEverything.addTab("Analysis settings", panelAnalysisSettings);

        menuFile.setText("File");

        menuFileLoad.setText("Load");
        menuFileLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileLoadActionPerformed(evt);
            }
        });
        menuFile.add(menuFileLoad);

        menuFileExit.setText("Exit");
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileExit);

        menuBarMain.add(menuFile);

        menuEdit.setText("Edit");
        menuBarMain.add(menuEdit);

        setJMenuBar(menuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelEverything, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelEverything)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuFileLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileLoadActionPerformed

        //TODO odkomentovat------------------------------------------------------
//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setMultiSelectionEnabled(false);
//        FileFilter fileFilterXLS = new FileFilter() {
//
//            @Override
//            public boolean accept(File f) {
//                if (f.isDirectory()) {
//                    return true;
//                } else {
//                    String extension = f.getName().substring(f.getName().lastIndexOf('.'));
//                    return ".xls".equals(extension) || ".xlsx".equals(extension);
//                }
//            }
//            
//            @Override
//            public String getDescription() {
//                return "MS Excel files (.xls, .xlsx)";
//            }
//        };
//        fileChooser.setFileFilter(fileFilterXLS);
//        if (evt.getSource() == menuFileLoad) {
//            switch (fileChooser.showOpenDialog(this)) {
//                case JFileChooser.APPROVE_OPTION:
//                    this.loadedFile = fileChooser.getSelectedFile();
                                               this.loadedFile = new File("C:\\Users\\Andrejka\\Documents\\fi_muni\\phd\\3d_semester-madrid\\w02\\javier redondo\\brent_prices_its_2000_2014.xlsx");
                    dataTableModel.openFile(loadedFile);
                    dataTableModel.fireTableStructureChanged();
                    for (String colname : dataTableModel.getColnames()) {
                        comboBoxColnames.addItem(colname);
                        comboBoxColnamesSummary.addItem(colname);
                    }
                    if (! dataTableModel.getColnames().isEmpty()) {
                        buttonPlotColname.setEnabled(true);
                        buttonSummaryColname.setEnabled(true);
                    }
//                    break;
//                case JFileChooser.CANCEL_OPTION:
//                default:
//                    this.loadedFile = null;
//            }
//        }
        
        //this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_menuFileLoadActionPerformed

    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_menuFileExitActionPerformed

    private void buttonPlotColnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlotColnameActionPerformed
        String colname = comboBoxColnames.getSelectedItem().toString();
        
        ImageIcon plotImage = dataTableModel.producePlot(colname);
        
        panelPlot.removeAll();
        JPanel frame = new JPanel();
        frame.setSize(plotImage.getIconWidth(), plotImage.getIconHeight());
        JLabel label = new JLabel(plotImage);
        frame.add(label);
        frame.setVisible(true);
        panelPlot.add(frame);
    }//GEN-LAST:event_buttonPlotColnameActionPerformed

    private void textFieldPercentTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPercentTrainActionPerformed
        try {
            int val = Integer.parseInt(textFieldPercentTrain.getText());
            sliderPercentTrain.setValue(val);
        } catch (NumberFormatException e) {
            //TODO log
        }
    }//GEN-LAST:event_textFieldPercentTrainActionPerformed

    private void sliderPercentTrainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderPercentTrainStateChanged
        textFieldPercentTrain.setText("" + sliderPercentTrain.getValue());
    }//GEN-LAST:event_sliderPercentTrainStateChanged

    private void buttonSummaryColnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSummaryColnameActionPerformed
        String colname = comboBoxColnamesSummary.getSelectedItem().toString();
        
        //tu treba natrenovat a spocitat a zobrazit vsetko
        TrainAndTestReport report = dataTableModel.trainAndTest(colname, sliderPercentTrain.getValue(), comboBoxRPackage.getSelectedItem().toString());
        
        panelSummary.removeAll();
        JTable errorMeasuresTable = new JTable();
        errorMeasuresTable.setSize(panelSummary.getWidth(), panelSummary.getHeight());
        errorMeasuresTable.setModel(new ErrorMeasuresTableModel(report.getErrorMeasures()));
        errorMeasuresTable.setDefaultRenderer(Object.class, new TableBothHeadersCellColorRenderer());
        errorMeasuresTable.setVisible(true);
        panelSummary.add(errorMeasuresTable);
        
        
        
        //tu bude treba: z trainAndTest ziskat aj forecastnute data, potom ich prilepit k trenovacim, a spolu naplotovat
        //      (tie forecastnute teoreticky inym stylom)
//        ImageIcon forecastPlotImage = dataTableModel.produceForecastPlot(colname);
//        
//        panelPlot.removeAll();
//        JPanel frame = new JPanel();
//        frame.setSize(forecastPlotImage.getIconWidth(), forecastPlotImage.getIconHeight());
//        JLabel label = new JLabel(forecastPlotImage);
//        frame.add(label);
//        frame.setVisible(true);
//        panelPlot.add(frame);
//        jLabelTrainingInfo.setText("The forecast plot can now be found in the Chart panel.");
    }//GEN-LAST:event_buttonSummaryColnameActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPlotColname;
    private javax.swing.JButton buttonSummaryColname;
    private javax.swing.JComboBox comboBoxColnames;
    private javax.swing.JComboBox comboBoxColnamesSummary;
    private javax.swing.JComboBox comboBoxRPackage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelARIMA;
    private javax.swing.JLabel jLabelPercTrain;
    private javax.swing.JLabel jLabelPercentSign;
    private javax.swing.JLabel jLabelRPkg;
    private javax.swing.JLabel jLabelTrainingInfo;
    private javax.swing.JTable jTableData;
    private javax.swing.JMenuBar menuBarMain;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JMenuItem menuFileLoad;
    private javax.swing.JTabbedPane paneSettingsMethods;
    private javax.swing.JPanel paneSettingsMethodsARIMA;
    private javax.swing.JPanel paneSettingsMethodsMLP;
    private javax.swing.JPanel panelAnalysisSettings;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel panelData;
    private javax.swing.JTabbedPane panelEverything;
    private javax.swing.JPanel panelPlot;
    private javax.swing.JPanel panelSettingsMLPPackage;
    private javax.swing.JPanel panelSummary;
    private javax.swing.JPanel panelSummaryOutside;
    private javax.swing.JScrollPane scrollPaneData;
    private javax.swing.JSlider sliderPercentTrain;
    private javax.swing.JTextField textFieldNumNodesInHiddenSingleLayer;
    private javax.swing.JTextField textFieldNumNonSeasonalLags;
    private javax.swing.JTextField textFieldNumSeasonalLags;
    private javax.swing.JTextField textFieldPercentTrain;
    // End of variables declaration//GEN-END:variables

    private File loadedFile;
    private final DataTableModel dataTableModel = new DataTableModel();

}
