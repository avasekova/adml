package gui.subpanels;

import analysis.StatisticalTests;
import gui.MainFrame;
import gui.PlotDrawer;
import gui.filefilters.FileFilterEps;
import gui.filefilters.FileFilterPdf;
import gui.filefilters.FileFilterPng;
import gui.filefilters.FileFilterPs;
import gui.filefilters.RFileFilter;
import gui.files.PlotExtensionFileChooser;
import gui.tablemodels.DataTableModel;
import java.io.File;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import org.rosuda.javaGD.JGDBufferedPanel;
import utils.MyRengine;

public class TestsSubPanel extends javax.swing.JPanel {

    public TestsSubPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTestsOutside = new javax.swing.JPanel();
        buttonNormalityTests = new javax.swing.JButton();
        buttonStationarityTest = new javax.swing.JButton();
        buttonStructBreaks = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        textFieldMaxStructBreaks = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        listColnamesTests = new javax.swing.JList();
        jSeparator15 = new javax.swing.JSeparator();
        tabbedPaneAnalysisPlotsTests = new javax.swing.JTabbedPane();
        buttonExportTextAreaTests = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaTests = new javax.swing.JTextArea();
        buttonExportTestsPlots = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        buttonKMOTest = new javax.swing.JButton();
        buttonBartlettsTest = new javax.swing.JButton();

        buttonNormalityTests.setText("Tests for normality");
        buttonNormalityTests.setEnabled(false);
        buttonNormalityTests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNormalityTestsActionPerformed(evt);
            }
        });

        buttonStationarityTest.setText("Tests for stationarity");
        buttonStationarityTest.setEnabled(false);
        buttonStationarityTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStationarityTestActionPerformed(evt);
            }
        });

        buttonStructBreaks.setText("Find structural breaks");
        buttonStructBreaks.setEnabled(false);
        buttonStructBreaks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStructBreaksActionPerformed(evt);
            }
        });

        jLabel19.setText("Max");

        textFieldMaxStructBreaks.setText("2");

        jLabel20.setText("structural breaks");

        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("TODO: seasonal");

        listColnamesTests.setModel(new DefaultListModel());
        jScrollPane9.setViewportView(listColnamesTests);

        jSeparator15.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buttonExportTextAreaTests.setText("Save the contents of the box below:");
        buttonExportTextAreaTests.setEnabled(false);
        buttonExportTextAreaTests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportTextAreaTestsActionPerformed(evt);
            }
        });

        jScrollPane3.setPreferredSize(new java.awt.Dimension(164, 89));

        textAreaTests.setEditable(false);
        textAreaTests.setColumns(20);
        textAreaTests.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textAreaTests.setLineWrap(true);
        textAreaTests.setRows(5);
        textAreaTests.setFocusable(false);
        textAreaTests.setMaximumSize(new java.awt.Dimension(32767, 32767));
        textAreaTests.setOpaque(false);
        jScrollPane3.setViewportView(textAreaTests);

        buttonExportTestsPlots.setText("Export currently shown plot");
        buttonExportTestsPlots.setEnabled(false);
        buttonExportTestsPlots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportTestsPlotsActionPerformed(evt);
            }
        });

        jLabel34.setText("(Broken - only exports the last tab.)");

        buttonKMOTest.setText("KMO test");
        buttonKMOTest.setEnabled(false);
        buttonKMOTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKMOTestActionPerformed(evt);
            }
        });

        buttonBartlettsTest.setText("Bartlett's test");
        buttonBartlettsTest.setEnabled(false);
        buttonBartlettsTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBartlettsTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTestsOutsideLayout = new javax.swing.GroupLayout(panelTestsOutside);
        panelTestsOutside.setLayout(panelTestsOutsideLayout);
        panelTestsOutsideLayout.setHorizontalGroup(
            panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonNormalityTests)
                            .addComponent(buttonStationarityTest)
                            .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                                .addComponent(buttonStructBreaks)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldMaxStructBreaks, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel20)))
                            .addComponent(buttonKMOTest)
                            .addComponent(buttonBartlettsTest)))
                    .addComponent(buttonExportTextAreaTests)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator15, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPaneAnalysisPlotsTests)
                    .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                        .addComponent(buttonExportTestsPlots)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addGap(0, 440, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelTestsOutsideLayout.setVerticalGroup(
            panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                        .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelTestsOutsideLayout.createSequentialGroup()
                                .addComponent(buttonNormalityTests)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonStationarityTest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addGap(7, 7, 7)
                                .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(buttonStructBreaks)
                                    .addComponent(jLabel19)
                                    .addComponent(textFieldMaxStructBreaks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonKMOTest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBartlettsTest)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonExportTextAreaTests)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                    .addComponent(jSeparator15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestsOutsideLayout.createSequentialGroup()
                        .addGroup(panelTestsOutsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonExportTestsPlots)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPaneAnalysisPlotsTests)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1374, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelTestsOutside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelTestsOutside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonNormalityTestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNormalityTestsActionPerformed
        textAreaTests.setText(StatisticalTests.normalProbabilityTests(listColnamesTests.getSelectedValuesList()));

        //and show the normal probability plots:
        PlotDrawer.drawSimpleFctionToGrid("qqnorm", listColnamesTests.getSelectedValuesList(), DataTableModel.getInstance(), tabbedPaneAnalysisPlotsTests);
        MainFrame.getInstance().setPlotRanges(0, 0);
    }//GEN-LAST:event_buttonNormalityTestsActionPerformed

    private void buttonStationarityTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStationarityTestActionPerformed
        textAreaTests.setText(StatisticalTests.stationarityTests(listColnamesTests.getSelectedValuesList()));
    }//GEN-LAST:event_buttonStationarityTestActionPerformed

    private void buttonStructBreaksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStructBreaksActionPerformed
        int breaks = 5;
        try {
            breaks = Integer.parseInt(textFieldMaxStructBreaks.getText());
        } catch (NumberFormatException e) {
            //logger.error("Exception", e); // TODO: review logging
        }

        List<String> plots = StatisticalTests.stucturalBreaksTests(listColnamesTests.getSelectedValuesList(), breaks); //bacha, posledny prvok je to info
        //TODO toto potom vyriesit lepsie (uz na urovni tej metody, ktora to zle vracia
            String structBreaksInfo = plots.get(plots.size() - 1);
            plots.remove(plots.size() - 1);

            //TODO refactor odtialto------------------
            //potom ich nechaj vyplut do mriezky
            List<JGDBufferedPanel> panels = PlotDrawer.drawToGrid(tabbedPaneAnalysisPlotsTests.getWidth(),
                tabbedPaneAnalysisPlotsTests.getHeight(), plots, 1, 1);

            //a tu mriezku nakresli
            tabbedPaneAnalysisPlotsTests.removeAll();
            int i = 0;
            for (JGDBufferedPanel p : panels) {
                tabbedPaneAnalysisPlotsTests.addTab("Page "+(++i), p);
            }

            tabbedPaneAnalysisPlotsTests.repaint();
            //---------------potialto je to rovnake aj inde. vybrat do samostatnej metody

            //a vypis info
            textAreaTests.setText(structBreaksInfo);

            MainFrame.getInstance().setPlotRanges(0, 0);
            buttonExportTestsPlots.setEnabled(true);
    }//GEN-LAST:event_buttonStructBreaksActionPerformed

    private void buttonExportTextAreaTestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportTextAreaTestsActionPerformed
        MainFrame.getInstance().exportTextArea(evt, buttonExportTextAreaTests, textAreaTests);
    }//GEN-LAST:event_buttonExportTextAreaTestsActionPerformed

    private void buttonExportTestsPlotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportTestsPlotsActionPerformed
        //idealne by mohlo v buducnosti exportovat vsetky zobrazene taby, ale tam je problem s existujucimi subormi
        //TODO vymysliet

        JFileChooser fileChooser = new PlotExtensionFileChooser();
        fileChooser.setSelectedFile(new File("plotExport.eps"));

        fileChooser.setAcceptAllFileFilterUsed(false); //do not allow "All files"
        fileChooser.addChoosableFileFilter(new FileFilterEps());
        fileChooser.addChoosableFileFilter(new FileFilterPs());
        fileChooser.addChoosableFileFilter(new FileFilterPng());
        fileChooser.addChoosableFileFilter(new FileFilterPdf());

        if (evt.getSource() == buttonExportTestsPlots) {
            switch (fileChooser.showSaveDialog(this)) {
                case JFileChooser.APPROVE_OPTION:
                File plotFile = fileChooser.getSelectedFile();
                MyRengine rengine = MyRengine.getRengine();

                String device = "";
                String ext = "";
                if (fileChooser.getFileFilter() instanceof RFileFilter) {
                    device = ((RFileFilter)fileChooser.getFileFilter()).getDevice();
                    ext = ((RFileFilter)fileChooser.getFileFilter()).getExtension();
                }

                String fileName = plotFile.getPath().replace("\\", "\\\\");
                    if (fileName.contains(".") && (fileName.lastIndexOf('.') < (fileName.length()-1))) {
                        //tipnem si, ze je tam pripona
                        String extCurr = fileName.substring((fileName.lastIndexOf('.')+1), fileName.length()); //vezmem si priponu
                        if (extCurr.equals("eps") || extCurr.equals("ps") || extCurr.equals("png") || extCurr.equals("pdf")) {
                            fileName = fileName.substring(0, fileName.lastIndexOf('.'));
                        } //else to bola nejaka ina cast mena za bodkou
                    }

                    rengine.eval("dev.print(" + device + ", file=\"" + fileName + "." + ext + "\", width=1280, height=760)");
                                //TODO mozno nie natvrdo width a height, ale zatial staci
                    //                    rengine.eval("dev.off()"); //z nejakeho dovodu to "nerefreshuje" nasledujuce ploty, ked to vypnem.
                    break;
                    case JFileChooser.CANCEL_OPTION:
                    default:
                    //nothing
                }
            }
    }//GEN-LAST:event_buttonExportTestsPlotsActionPerformed

    private void buttonKMOTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKMOTestActionPerformed
        textAreaTests.setText(StatisticalTests.KMOTest(listColnamesTests.getSelectedValuesList()));
    }//GEN-LAST:event_buttonKMOTestActionPerformed

    private void buttonBartlettsTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBartlettsTestActionPerformed
        textAreaTests.setText(StatisticalTests.bartlettsTest(listColnamesTests.getSelectedValuesList()));
    }//GEN-LAST:event_buttonBartlettsTestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBartlettsTest;
    private javax.swing.JButton buttonExportTestsPlots;
    private javax.swing.JButton buttonExportTextAreaTests;
    private javax.swing.JButton buttonKMOTest;
    private javax.swing.JButton buttonNormalityTests;
    private javax.swing.JButton buttonStationarityTest;
    private javax.swing.JButton buttonStructBreaks;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JList listColnamesTests;
    private javax.swing.JPanel panelTestsOutside;
    private javax.swing.JTabbedPane tabbedPaneAnalysisPlotsTests;
    private javax.swing.JTextArea textAreaTests;
    private javax.swing.JTextField textFieldMaxStructBreaks;
    // End of variables declaration//GEN-END:variables

    public JButton getButtonBartlettsTest() {
        return buttonBartlettsTest;
    }

    public JButton getButtonExportTestsPlots() {
        return buttonExportTestsPlots;
    }

    public JButton getButtonExportTextAreaTests() {
        return buttonExportTextAreaTests;
    }

    public JButton getButtonKMOTest() {
        return buttonKMOTest;
    }

    public JButton getButtonNormalityTests() {
        return buttonNormalityTests;
    }

    public JButton getButtonStationarityTest() {
        return buttonStationarityTest;
    }

    public JButton getButtonStructBreaks() {
        return buttonStructBreaks;
    }

    public JScrollPane getjScrollPane3() {
        return jScrollPane3;
    }

    public JScrollPane getjScrollPane9() {
        return jScrollPane9;
    }

    public JList getListColnamesTests() {
        return listColnamesTests;
    }

    public JPanel getPanelTestsOutside() {
        return panelTestsOutside;
    }

    public JTabbedPane getTabbedPaneAnalysisPlotsTests() {
        return tabbedPaneAnalysisPlotsTests;
    }

    public JTextArea getTextAreaTests() {
        return textAreaTests;
    }

    public JTextField getTextFieldMaxStructBreaks() {
        return textFieldMaxStructBreaks;
    }

}
