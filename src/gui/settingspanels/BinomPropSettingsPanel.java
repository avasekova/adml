package gui.settingspanels;

import java.util.List;
import javax.swing.JOptionPane;
import models.params.Params;
import utils.Const;
import utils.FieldsParser;

public class BinomPropSettingsPanel extends SettingsPanel {

    /**
     * Creates new form BinomPropSettingsPanel
     */
    public BinomPropSettingsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel26 = new javax.swing.JLabel();
        textFieldQuantileOne = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        textFieldQuantileOneValue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textFieldQuantileTwo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldQuantileTwoValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldNumSuccesses = new javax.swing.JTextField();
        textFieldNumObservations = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jLabel26.setText("Estimate of the");

        textFieldQuantileOne.setText("50");

        jLabel27.setText("th percentile:");

        jLabel1.setText("Estimate of the");

        textFieldQuantileTwo.setText("90");

        jLabel2.setText("th percentile:");

        jLabel3.setText("Observed data:");

        jLabel4.setText("successes out of");

        jLabel5.setText("observations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldQuantileOne, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldQuantileTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldQuantileOneValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFieldQuantileTwoValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldNumSuccesses, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldNumObservations, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(jLabel3)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(textFieldQuantileOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(textFieldQuantileOneValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldQuantileTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldQuantileTwoValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNumSuccesses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldNumObservations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField textFieldNumObservations;
    private javax.swing.JTextField textFieldNumSuccesses;
    private javax.swing.JTextField textFieldQuantileOne;
    private javax.swing.JTextField textFieldQuantileOneValue;
    private javax.swing.JTextField textFieldQuantileTwo;
    private javax.swing.JTextField textFieldQuantileTwoValue;
    // End of variables declaration//GEN-END:variables

    public String getQuantileOne() {
        return textFieldQuantileOne.getText();
    }
    
    public String getQuantileOneValue() {
        return textFieldQuantileOneValue.getText();
    }
    
    public String getQuantileTwo() {
        return textFieldQuantileTwo.getText();
    }
    
    public String getQuantileTwoValue() {
        return textFieldQuantileTwoValue.getText();
    }
    
    public String getNumObservations() {
        return textFieldNumObservations.getText();
    }
    
    public String getNumSuccesses() {
        return textFieldNumSuccesses.getText();
    }

    @Override
    public void enableAllElements(boolean trueFalse) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    @Override
    public <T extends Params> void setSpecificParams(Class<T> classss, List<T> resultList) throws IllegalArgumentException {
        if ("".equals(getQuantileOne()) || "".equals(getQuantileOneValue()) || "".equals(getQuantileTwo()) || "".equals(getQuantileTwoValue())
                                        || "".equals(getNumObservations())  || "".equals(getNumSuccesses())) {
            JOptionPane.showMessageDialog(null, "All fields in the box need to be filled in for " + Const.BINOM_PROP + " analyses to run.");
            throw new IllegalArgumentException(Const.BINOM_PROP + " not all filled in"); //TODO zaviest si vlastne vynimky pre tieto SettingsPanely, modely, atd.
        }
        
        SettingsPanel.setSomethingList(classss, resultList, "setQuantileOne", Integer.class, FieldsParser.parseIntegers(getQuantileOne()));
        SettingsPanel.setSomethingList(classss, resultList, "setQuantileOneValue", Double.class, FieldsParser.parseDoubles(getQuantileOneValue()));
        SettingsPanel.setSomethingList(classss, resultList, "setQuantileTwo", Integer.class, FieldsParser.parseIntegers(getQuantileTwo()));
        SettingsPanel.setSomethingList(classss, resultList, "setQuantileTwoValue", Double.class, FieldsParser.parseDoubles(getQuantileTwoValue()));
        SettingsPanel.setSomethingList(classss, resultList, "setNumObservations", Integer.class, FieldsParser.parseIntegers(getNumObservations()));
        SettingsPanel.setSomethingList(classss, resultList, "setNumSuccesses", Integer.class, FieldsParser.parseIntegers(getNumSuccesses()));
    }
}
