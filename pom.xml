<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>groupId</groupId>
    <artifactId>adml</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>MLP</name>
    <description>MLP</description>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.libdir>${project.basedir}/libraries</project.libdir>
        <project.repodir>${project.basedir}/libraries-repo</project.repodir>
    </properties>

    <repositories>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>

        <repository>
            <url>http://download.java.net/maven/2</url>
            <id>hibernate-support</id>
            <layout>default</layout>
            <name>Repository for library</name>
        </repository>

        <!-- Our repository with local dependencies 0-->
        <repository>
            <id>mlp-maven-repo</id>
            <url>file:///${project.repodir}</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Local dependencies for R integration -->
        <dependency>
            <groupId>mlp.org.rosuda</groupId>
            <artifactId>javaGD</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>mlp.org.rosuda</groupId>
            <artifactId>JRI</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>mlp.org.rosuda</groupId>
            <artifactId>REngine</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>mlp.org.rosuda</groupId>
            <artifactId>JRIEngine</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>mlp.jxl</groupId>
            <artifactId>jxl</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- Command line arguments -->
        <dependency>
            <groupId>args4j</groupId>
            <artifactId>args4j</artifactId>
            <version>2.32</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.3</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Probably the easiest way to install a local JAR dependency to the local maven repository
             Source: http://blog.valdaris.com/post/custom-jar/
             Another solution would be http://stackoverflow.com/questions/4955635/how-to-add-local-jar-files-in-maven-project
               Thus running plugin install manually from command line but this is not that seamless after project
               clone by a new developer as a new action is needed in order to build project for the first time
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>

                    <!-- javaGD -->
                    <execution>
                        <id>0</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>mlp.org.rosuda</groupId>
                            <artifactId>javaGD</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${project.repodir}</localRepositoryPath>
                            <file>${project.libdir}/javaGD.jar</file>
                        </configuration>
                    </execution>

                    <!-- JRI -->
                    <execution>
                        <id>1</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>mlp.org.rosuda</groupId>
                            <artifactId>JRI</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${project.repodir}</localRepositoryPath>
                            <file>${project.libdir}/JRI.jar</file>
                        </configuration>
                    </execution>

                    <!-- JRIEngine -->
                    <execution>
                        <id>2</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>mlp.org.rosuda</groupId>
                            <artifactId>JRIEngine</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${project.repodir}</localRepositoryPath>
                            <file>${project.libdir}/JRIEngine.jar</file>
                        </configuration>
                    </execution>

                    <!-- REngine -->
                    <execution>
                        <id>3</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>mlp.org.rosuda</groupId>
                            <artifactId>REngine</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${project.repodir}</localRepositoryPath>
                            <file>${project.libdir}/REngine.jar</file>
                        </configuration>
                    </execution>

                    <!-- jxl -->
                    <execution>
                        <id>4</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>mlp.jxl</groupId>
                            <artifactId>jxl</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${project.repodir}</localRepositoryPath>
                            <file>${project.libdir}/jxl.jar</file>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- Project building -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Shade plugin to generate fully functional jar with all dependencies
            and schemas on classpath -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>gui.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Export all dependencies as jars to specified directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>